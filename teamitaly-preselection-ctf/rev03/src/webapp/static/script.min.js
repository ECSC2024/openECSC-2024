const socket=io();function start(){socket.emit("start",(function(){})),console.log("start")}let wa;async function main(){wa=await WebAssembly.instantiateStreaming(fetch("/static/pow.wasm"),{js:{mem:new WebAssembly.Memory({initial:0})}})}main();let started=!1,timerInterval=null,responseReady=!1,_socket=null,_data=null;function displayMsg(e){document.getElementById("main").innerHTML=`<div>${e}</div>\n<button class="btn btn-primary" onClick="location.reload()">Home</button>`}function respond(e){console.log("respond"),e&&e.preventDefault();let t=_data.pow,n=wa.instance.exports.solve_pow(BigInt(t.a),BigInt(t.b),BigInt(t.c),BigInt(t.d));n=Number(n),console.log(n),_socket.send({pow_response:n,operation_response:+document.getElementById("response").value})}$(document).ready((function(){})),socket.on("connect",(()=>{console.log("connected"),document.getElementById("header").innerHTML="Server online",document.getElementById("status").style.backgroundColor="green"})),socket.on("disconnect",(()=>{console.log("disconnected"),document.getElementById("header").innerHTML="Server offline",document.getElementById("status").style.backgroundColor="red"})),socket.on("message",(function(e){if(console.log("got data"),console.log(e),started||(timerInterval=setInterval((()=>{let e=document.getElementById("clock"),t=+e.innerText;e.innerText=t-1,t<=1&&timerInterval&&(clearInterval(timerInterval),displayMsg("Too slow!"))}),1e3),started=!0),"calculation"==e.type){let t=e.operation;responseReady=!1,_socket=socket,_data=e,document.getElementById("main").innerHTML=`<div>${t.a} ${t.o} ${t.b}</div>\n<form onSubmit="respond(event)"><input id="response"></input></form>\n<button class="btn btn-primary" onClick="respond()">Submit</button>`,document.getElementById("response").focus()}else displayMsg(e.message)}));